<?php
class PaiementModel {
    private $conn;

    public function __construct($db) {
        $this->conn = $db;
    }

    // Récupérer les informations de l'élève par matricule
    public function getEleveInfo($matricule) {
        $stmt = $this->conn->prepare("
            SELECT a.matricule, a.nom, a.prenom, t.montant 
            FROM administrateur a 
            INNER JOIN tarifs t ON a.role COLLATE utf8mb4_unicode_ci = t.role COLLATE utf8mb4_unicode_ci 
            WHERE a.archivage = FALSE AND a.matricule = :matricule
        ");
        $stmt->bindParam(':matricule', $matricule);
        $stmt->execute();
        return $stmt->fetchAll(PDO::FETCH_ASSOC);
    }

    // Enregistrer le paiement
    public function enregistrerPaiement($matricule, $nom, $prenom, $mois, $montant) {
        $insertStmt = $this->conn->prepare("
            INSERT INTO suivit_de_paiement (matricule, nom, prenom, mois_payer, montant, etat_paiement)
            VALUES (:matricule, :nom, :prenom, :mois, :montant, 'payé')
        ");
        $insertStmt->bindParam(':matricule', $matricule);
        $insertStmt->bindParam(':nom', $nom);
        $insertStmt->bindParam(':prenom', $prenom);
        $insertStmt->bindParam(':mois', $mois);
        $insertStmt->bindParam(':montant', $montant);
        return $insertStmt->execute();
    }

    // Vérifier si un paiement existe déjà pour un mois donné
    public function paiementExiste($matricule, $mois) {
        $checkStmt = $this->conn->prepare("
            SELECT COUNT(*) FROM suivit_de_paiement 
            WHERE matricule = :matricule AND mois_payer = :mois
        ");
        $checkStmt->bindParam(':matricule', $matricule);
        $checkStmt->bindParam(':mois', $mois);
        $checkStmt->execute();
        return $checkStmt->fetchColumn() > 0;
    }
}
?>
